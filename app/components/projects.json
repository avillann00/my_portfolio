[
  {
    "id": "1",
    "title": "Basketball Betting App",
    "previewImage": "/basketball_preview.jpg",
    "detailedImage": "/basketball_detailed.jpg",
    "detailedDescription": "This app provides analysis of team and player statistics as well as leverages machie learning to provide insight on potential stats the user is able to search for any player or any team and view their related statistics. The machine learning portion is still being worked on.\nThis app uses Django for the backend, React for the frontend, and PostgreSQL for the database. This app also uses JWT Tokens to ensure secure user authentication.\nThe inspiration for this app came from my love of basketball and programming. Since the development of machine learning and the abundance of statistical data I had the resources to create this app.\nThis app helped me learn how to effectively use Django, React, and PostgreSQL together so that I can apply it to my job in the future. I also learned valuable skills like implementing JWT Tokens which are used widely in the workspace to enusure security.",
    "link": "https://github.com/avillann00/basketball_stats",
    "isPdf": false
  },
  {
    "id": "2",
    "title": "Finance App",
    "previewImage": "/money_preview.jpg",
    "detailedImage": "/finance_detailed.jpg",
    "detailedDescription": "This app is a financial tracking app that enables users to easily view and manage their finances. This app allows users to input their monthly spending and expenses so that it can easily be viewed using dynamic graphs. I also implemented a feature that collects various stock prices and exchange rates for the user.\nThis app is built using Flask and Jinga templates.\nI came up with this app idea becuase I realized that most services require payment for advanced features like graph visualization so I built this app as a free resource for people to manage their finances.\nFrom building this app, I learned how to use Flask which is a popular way to quickly start a website. Flask is also used for API creation so my knowledge of Flask can be easily transferred to many different scenarios.",
    "link": "https://github.com/avillann00/finance_app",
    "isPdf": false
  },
  {
    "id": "3",
    "title": "Car Price Predictor",
    "previewImage": "/car_preview.jpg",
    "detailedImage": "/car_detailed.jpg",
    "detailedDescription": "This app helps users estimate the price of a selected car by using Scikit-Learn's gradient boosting model to accurately predict the price of a car based on various factors. This app uses data collected from kaggle to train the model based on the various features and an integrated API to provide accurate pricing data to the user as a secondary source of information.\nThis app is created using Django and secured using OAuth.\nAfter doing some research on machine learning, I was looking for a way that it could be applied into a real life scenario. The inspiration came from my own life where I was at the time looking for a new car and I wanted a way to estimate the price of a car that I was looking at.\nAfter building this app, I learned the machine learning workflow and how it gets integrated into a real life application. For the work flow, I learned how to pre-process data, train a model, and how to make predictions. These skills are very valuable becuase they ensure clean and correct data and prediction results which can be used into any companies environment.",
    "link": "https://github.com/avillann00/car_predictor",
    "isPdf": false
  },
  {
    "id": "7",
    "title": "Job Materials",
    "previewImage": "job_materials_preview.jpg",
    "detailedImage": "/ENC Cover Letter.pdf",
    "detailedDescription": "For this project from my technical writing class, I was tasked with creating a resume and cover letter for a job listing of my choice. The purpose of this project was to help prepare us for applying for an actual job. Further, the skills that we learned from this project are supposed to be applied to others in the future.\nI choose a job listing from the company CareYaya which I found on Handshake. This was for a Software Engineering internship where I would utilize various programming techniques and languages. My goal was to showcase my technical writing skills to a recruiter in a way that proves that I am the best candidate for this position. For the first part of the assignment, I created a cover letter, that is formatted correctly, to try and quickly explain who I am and why I'm qualified for this position. For the last part, I created a resume that aims to show off my accomplishments, projects, and skills in an easy to read manner.\nAfter my first attempt at this project I recieved a lot of feedback which I took into consideration to formulate my current resume and cover letter. In my cover letter, I reworded some of my paragraphs to be more clear and more specific. Instead of sounding vague and jumping to different topics in each paragraph, my cover letter now is more concise and has a better flow. In my resume, I had to fix some formatting issues and some grammar errors to make everything more consistent and better looking.\nFrom this project, I learned how I should write a cover letter and resume so that in the future I can improve my chances of landing a role in my field. I now understand that details matter very much when it comes to applying for a job and everything needs to be as neat and as clear as possible.\nTo see my resume click the menu icon in the top left corner and select 'Resume'.",
    "link": "https://github.com/avillann00/enc_cover_letter",
    "isPdf": true
  },
  {
    "id": "8",
    "title": "Instructions",
    "previewImage": "instructions_preview.jpg",
    "detailedImage": "/ENC Instructions.pdf",
    "detailedDescription": "For this project from my technical writing class, I was tasked with creating a set of instructions about a topic of my choice. The instructions are supposed to help us understand how to write to a specific audience for a specific purpose in a way that they will understand. This includes making sure that the text and format was designed in a way that is easy to view and read.\nI choose to create instructions on how to use GitHub for new Computer Science students. I was aiming to teach my audience how to create a repository, how to make a commit, how to make a branch, and how to merge that branch, which are all very useful actions that are commonly used in the git workflow. I used a variety of photos along with sub-headings and each step for the sub-headings to effectively describe each action. Each photo is cropped and uses photos so that there is no misconception about what the user should be looking at. The content includes notes about important things that the user should be aware of as they are following along. These features allow the user to follow along easily because GitHub can be confusing to people who haven't used it before.\nFrom the feedback that I recieved, I mainly had to fix the format of my instructions as the content was mostly good. I needed to fix the single columns, lack of sub-headings, and photos. I first switched the document from single column to double columns so that not everything is in a straight line down the page. Then, I added sub-headings and re-numbered the steps so that the reader can easily jump from section to section without getting lost. Lastly, I re-formatted the photos so that they are more zoomed in on what is most important.\nFrom this project, I learned that no step or piece of information is to unimportant to leave out. As someone who uses a certain platform regularly, you may skip over something that those who haven't used it before would not know. Also, I learned that formatting is crucial to documents of this type. No matter how good the content is, the format can decide whether or not a document is easy or hard to read.",
    "link": "https://github.com/avillann00/enc_instructions",
    "isPdf": true
  },
  {
    "id": "9",
    "title": "Research Proposal",
    "previewImage": "research_proposal_preview.jpg",
    "detailedImage": "/Project 3 Proposal.pdf",
    "detailedDescription": "For this project from my technical writing class, I was tasked with working with a group of people to make a research proposal to UCF's research department. We had to follow certain rules in order to make sure that our proposal was easy to read and followed all ethical guidelines. Our proposal had to be aimed at some sort of research that encompasses something that we all have experience in and is not too one dimensional.\nFor our proposal objective, we came up with the idea of creating machine learning software to predict the number of possible flu cases on a college campus so that the campus can better handle seasonal outbreaks. In the preliminary stages of this assignment, we prompted Microsoft's Copilot to help us generate possible ideas and this was one of the options. We worked together to create a strong proposal that effectively stages our issue and outlines how we are going to solve the issue. Our document includes all of the necessary sections that explains every detail of what we are aiming to do so that the reader can quickly understand what it is that we are trying to do.\nBased on the feedback that we recieved from our first submission, our main issues were that some of the sections needed to have its formatting corrected and that the methods section needs to be more chronological. First, I changed the formatting error in the project objective so taht each 'fold' is on a separate line and I changed the citation errors. Then, I rewrote some of the methods section to be more chronologica and have a more clear progression of steps. Now, our proposal is better formatted and the methods clearly shows how we are going to execute each step.\nFrom this project, I learned the importance of revision and teamwork. Through trial and error, we went back and forth deciding every detail to make sure that everything was the best that it could be. Also, working with a team helped me realize that I don't have to do everything myself and that there are others that can help cover up my weaknesses with their strengths. In the future, I can apply this knowledge by working closely with my peers in school or work so that we can achieve a strong result in an efficient manner.",
    "link": "https://github.com/avillann00/enc_proposal",
    "isPdf": true
  },
  {
    "id": "4",
    "title": "Fragrance Price Tracker",
    "previewImage": "/fragrance_preview.jpg",
    "detailedImage": "/fragrance_detailed.jpg",
    "detailedDescription": "This is a full stack application that uses Django, React, and PostgreSQL that allows users to track the price of a given fragrance across various websites. This application is enabled to perform CRUD actions so that users can compare the price of various fragrances to get the best deal. This application also makes use of JWT Tokens to ensure user security across all pages.",
    "link": "https://github.com/avillann00/fragrance_tracking",
    "isPdf": false
  },
  {
    "id": "5",
    "title": "Stock Analysis App",
    "previewImage": "/stock_preview.jpg",
    "detailedImage": "/stock_detailed.jpg",
    "detailedDescription": "This app is built using Django and collects data from the yfinance api. The data collected from the api is stored and processed using pandas before it is visualized using matplotlib. The app collects information for stocks in the s&p500 and calculates various metrics to give better insight on those stocks.",
    "link": "https://github.com/avillann00/stock_analyzing",
    "isPdf": false
  },
  {
    "id": "6",
    "title": "Java Bank Simulator",
    "previewImage": "/bank_preview.jpg",
    "detailedImage": "/bank_detailed.jpg",
    "detailedDescription": "This program is built using Java to make use of object oriented programming design concepts. There are 3 different classes that work with eachother so that the user can perform basic actions as if they were at a bank. Those actions include registering an account and other actions such as deposit and withdraw.",
    "link": "https://github.com/avillann00/bank_simulator",
    "isPdf": false
  }
]
